/***************************************************
 * 名称：Webpos2.0代码生成工具
 * 描述：主要用于生成Model
 **************************************************/
var IOUtil = require('fs-extra');
var PathUtil = require('path');
var StrUtil = require('../lib/string.js');
var GenUtil = require('./gen.util.js');

var ModelGener = function () { }

ModelGener.prototype.CodeGen = function (context) {
    console.log("start gen model " + context.TableName);
    var path = PathUtil.join(__dirname, 'templates', 'model.template');
    var template = GenUtil.ReadTemplate(path);
    var builder = [];
    var fields = context.Columns || [];
    var field = null;
    builder.push(StrUtil.Format('__ClassName: \'{0}\'', context.TableName));
    for (var i = 0, k = fields.length; i < k; i++) {
        field = fields[i];
        this.GenGetter(field, builder);
        this.GenSetter(field, builder);
    }
    //保存文件
    var savePath = PathUtil.join(context.BaseDIR, "models", context.TableName + ".model.js");
    template = StrUtil.Format(template, context.TableName, context.Version, context.TableName, builder.join(',\r\n'));
    GenUtil.SaveFile(savePath, template);
    console.log("gened model " + context.TableName);
}
//生成getter访问器
ModelGener.prototype.GenGetter = function (field, builder) {
    var dv = field.dflt_value;
    if (dv != null && dv != '') {
        if (isNaN(dv)) { dv = "\'" + dv + "\'"; }
        builder.push(StrUtil.Format('    get{0}: function () { return this.get("{0}") || {1}; }', field.name, dv));
    } else {
        builder.push(StrUtil.Format('    get{0}: function () { return this.get("{0}"); }', field.name));
    }
}
//生成setter设置器
ModelGener.prototype.GenSetter = function (field, builder) {
    builder.push(StrUtil.Format('    set{0}: function (v,options) {  return this.set("{0}", v, options);  }', field.name));
}
module.exports = new ModelGener();
